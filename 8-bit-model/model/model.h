#ifndef NEUTON_MODEL_MODEL_H
#define NEUTON_MODEL_MODEL_H

#ifdef __cplusplus
extern "C"
{
#endif

/* Model info */
#define NEUTON_MODEL_HEADER_VERSION 3
#define NEUTON_MODEL_QLEVEL 8
#define NEUTON_MODEL_FLOAT_SUPPORT 0
#define NEUTON_MODEL_TASK_TYPE 1  // binary classification
#define NEUTON_MODEL_NEURONS_COUNT 43
#define NEUTON_MODEL_WEIGHTS_COUNT 300
#define NEUTON_MODEL_INPUTS_COUNT 12
#define NEUTON_MODEL_INPUT_LIMITS_COUNT 12
#define NEUTON_MODEL_OUTPUTS_COUNT 2
#define NEUTON_MODEL_LOG_SCALE_OUTPUTS 0
#define NEUTON_MODEL_HAS_CLASSES_RATIO 0
#define NEUTON_MODEL_HAS_NEGPOS_RATIO 0

/* Preprocessing */
#define NEUTON_PREPROCESSING_ENABLED 0
#define NEUTON_DROP_ORIGINAL_FEATURES 0
#define NEUTON_BITMASK_ENABLED 1
#define NEUTON_INPUTS_IS_INTEGER 0
#define NEUTON_MODEL_SA_PRECISION 24

/* Types */
typedef float input_t;
typedef float extracted_feature_t;
typedef uint8_t coeff_t;
typedef int8_t weight_t;
typedef int32_t acc_signed_t;
typedef uint32_t acc_unsigned_t;
typedef uint8_t sources_size_t;
typedef uint16_t weights_size_t;
typedef uint8_t neurons_size_t;

/* Limits */
static const input_t modelInputMin[] = {
	-22.01, 10.74, 0, 10668, 15317, 930.85199, 0, 0, 0, 0, 0, 1.6547122e+09 };
static const input_t modelInputMax[] = {
	59.93, 75.199997, 60000, 13803, 21410, 939.86102, 45432.262, 61482.031,
	51914.68, 30026.438, 1, 1.6551301e+09 };

static const uint8_t modelUsedInputsMask[] = { 0xff, 0x0f };

/* Structure */
static const weight_t modelWeights[] = {
	-15, 68, -128, -128, 9, 42, 124, 20, 0, -36, -7, -9, -128, -128, -2, -2,
	-2, -2, 20, -113, -22, 121, -127, 9, -56, -80, -128, 125, -128, -69, -128,
	124, -2, 61, -128, -65, -72, -57, -126, -59, -47, 76, 23, 113, 102, 7,
	-128, 49, -22, -86, -128, -128, 97, -38, -126, 125, 124, 44, -122, 32,
	26, 116, -122, -35, -10, -20, 124, 0, 76, -32, 109, 7, -32, 92, -97, 124,
	-60, -78, 22, 124, -16, -55, -117, -59, 6, 122, -70, 125, -69, -26, -92,
	-128, -4, -13, -25, -128, 3, -128, -7, 74, 113, 95, -128, 121, -61, -90,
	-125, 68, -87, -128, 19, -26, 47, -128, -127, 123, 12, -128, -96, -128,
	125, -34, 28, 23, -128, 124, -115, -127, 95, -85, 91, -128, -128, 120,
	-99, -128, -128, -27, 120, 122, -128, 0, -113, 125, -128, -90, 18, -128,
	-3, -128, -125, -43, 103, 59, -128, -41, -122, -128, 121, -96, 39, 4, -96,
	-128, 93, -128, -95, -83, -69, 49, 114, 99, 90, -107, -114, -92, -128,
	121, -128, 123, -93, -71, 74, -51, 125, -93, 67, 125, 125, -3, -128, 60,
	-99, -94, 120, -128, -77, 125, 124, 125, -128, 125, 125, -128, 125, -128,
	127, -10, 125, 9, 35, 124, -111, -96, -58, 104, -3, -37, -30, -80, 122,
	-128, -111, 0, -91, -128, 125, -55, -49, 10, 71, -60, -27, -128, -128,
	-4, 39, 35, 105, 68, -104, -128, -11, 20, -121, -90, 13, -23, 36, 85, -93,
	-128, -128, -35, -50, -88, -70, -120, 44, -45, 58, 95, 73, -3, -128, -28,
	-128, 29, -15, -128, -105, 59, -79, -76, 114, 85, -48, 9, 125, 125, 126,
	-128, -92, -4, 121, -48, -3, -97, 101, -93, -128, 125, -122, -128, 126,
	-128, 120, 117, -5, -5 };

static const sources_size_t modelLinks[] = {
	0, 3, 4, 10, 11, 12, 0, 1, 3, 5, 7, 12, 0, 1, 1, 5, 6, 12, 0, 1, 0, 10,
	11, 12, 0, 2, 3, 0, 10, 12, 3, 4, 0, 3, 6, 12, 1, 4, 5, 1, 3, 12, 1, 2,
	6, 1, 3, 12, 5, 5, 7, 8, 11, 12, 1, 2, 4, 5, 0, 1, 12, 3, 0, 3, 4, 5, 8,
	9, 12, 1, 3, 4, 9, 5, 12, 4, 5, 11, 4, 8, 12, 11, 12, 0, 1, 3, 12, 2, 5,
	12, 13, 7, 12, 0, 1, 3, 12, 14, 12, 5, 6, 9, 3, 5, 12, 1, 15, 3, 5, 7,
	12, 11, 0, 1, 4, 5, 12, 0, 5, 11, 14, 1, 12, 1, 9, 13, 1, 3, 12, 1, 6,
	0, 2, 5, 12, 1, 8, 9, 18, 19, 11, 12, 1, 5, 7, 12, 19, 20, 12, 0, 9, 15,
	22, 3, 6, 12, 6, 7, 9, 12, 14, 12, 0, 10, 3, 10, 11, 12, 2, 10, 16, 25,
	5, 12, 1, 6, 15, 22, 23, 24, 27, 5, 12, 0, 3, 4, 6, 7, 8, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 12, 1,
	2, 3, 4, 12, 17, 12, 7, 8, 14, 15, 24, 28, 12, 15, 20, 28, 30, 1, 12, 7,
	12, 16, 20, 25, 12, 2, 26, 27, 31, 2, 12, 16, 22, 25, 28, 3, 12, 6, 8,
	18, 20, 6, 12, 1, 9, 19, 32, 1, 12, 3, 18, 21, 30, 34, 12, 1, 16, 18, 22,
	3, 12, 2, 18, 23, 26, 1, 12, 16, 22, 27, 6, 11, 12, 1, 2, 5, 30, 31, 32,
	33, 34, 35, 36, 37, 38, 39, 40, 41, 12 };

static const weights_size_t modelIntLinksBoundaries[] = {
	0, 7, 14, 20, 27, 32, 39, 45, 49, 58, 62, 73, 78, 83, 91, 98, 102, 107,
	112, 121, 126, 131, 140, 148, 153, 161, 164, 172, 181, 209, 216, 223, 228,
	235, 240, 246, 252, 258, 265, 270, 276, 281, 299 };
static const weights_size_t modelExtLinksBoundaries[] = {
	6, 12, 18, 24, 30, 36, 42, 48, 54, 61, 69, 75, 81, 87, 93, 99, 105, 111,
	117, 123, 129, 135, 142, 149, 156, 162, 168, 174, 183, 210, 217, 224, 230,
	236, 242, 248, 254, 260, 266, 272, 278, 284, 300 };

static const coeff_t modelFuncCoeffs[] = {
	159, 160, 157, 160, 157, 157, 160, 94, 142, 158, 156, 160, 157, 160, 160,
	160, 160, 155, 158, 155, 128, 129, 144, 156, 139, 160, 101, 157, 160, 160,
	115, 158, 154, 113, 116, 120, 150, 85, 96, 140, 160, 157, 160 };
static const uint8_t modelFuncTypes[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

static const neurons_size_t modelOutputNeurons[] = { 29, 42 };

#ifdef __cplusplus
}
#endif

#endif // NEUTON_MODEL_MODEL_H

